
# make 编译并下载
# make VERBOSE=1 显示编译详细过程
# make clean 清除编译临时文件
# 注意： Linux 下编译方式：
# 1. 从 http://pkgman.jieliapp.com/doc/all 处找到下载链接
# 2. 下载后，解压到 /opt/jieli 目录下，保证
#   /opt/jieli/common/bin/clang 存在（注意目录层次）
# 3. 确认 ulimit -n 的结果足够大（建议大于8096），否则链接可能会因为打开文件太多而失败
#   可以通过 ulimit -n 8096 来设置一个较大的值

# 工具路径设置
ifeq ($(OS), Windows_NT)
# Windows 下工具链位置
TOOL_DIR := C:/JL/pi32/bin
CC    := clang.exe
CXX   := clang.exe
LD    := lto-wrapper.exe
AR    := lto-ar.exe
MKDIR := mkdir_win -p
RM    := rm -rf

SYS_LIB_DIR := C:/JL/pi32/libc
SYS_INC_DIR := C:/JL/pi32/include/libc

## 后处理脚本
FIXBAT          := tools\utils\fixbat.exe # 用于处理 utf8->gbk 编码问题
POST_SCRIPT     := app\post_build\sh54\download.bat
RUN_POST_SCRIPT := $(POST_SCRIPT)
else
# Linux 下工具链位置
TOOL_DIR := /opt/jieli/pi32/bin
CC    := clang
CXX   := clang++
LD    := lto-wrapper
AR    := lto-ar
MKDIR := mkdir -p
RM    := rm -rf

SYS_LIB_DIR := $(TOOL_DIR)/../lib
SYS_INC_DIR := $(TOOL_DIR)/../include

## 后处理脚本
FIXBAT          := touch # Linux下不需要处理 bat 编码问题
POST_SCRIPT     := app/post_build/sh54/download.sh
RUN_POST_SCRIPT := bash $(POST_SCRIPT)
endif

CC  := $(TOOL_DIR)/$(CC)
CXX := $(TOOL_DIR)/$(CXX)
LD  := $(TOOL_DIR)/$(LD)
AR  := $(TOOL_DIR)/$(AR)
# 输出文件设置
OUT_ELF   := app/post_build/sh54/sdk.elf
OBJ_FILE  := $(OUT_ELF).objs.txt
# 编译路径设置
BUILD_DIR := ad14n_app_mg_objs

# 编译参数设置
CFLAGS := \
	-target pi32 \
	-integrated-as \
	-fno-builtin \
	-mllvm -pi32-memreg-opt \
	-mllvm -pi32-mem-offset-adj-opt \
	-mllvm -pi32-const-spill \
	-mllvm -pi32-enable-jz \
	-mllvm -pi32-tailcall-opt \
	-mllvm -inline-threshold=5 \
	-mllvm -pi32-enable-itblock=1 \
	-Oz \
	-flto \
	-integrated-as \
	-g \
	-Oz \
	-flto \
	-fprefer-gnu-section \
	-fms-extensions \
	-Wno-empty-body \
	-Wcast-align \
	-Wundef \


# 宏定义
DEFINES := \
	-DD_TOY_SDK=1 \
	-DD_APP_TOY=1 \
	-DMAX_F1A_CHANNEL=2 \
	-DFPGA=0 \
	-DCPU_SH55=0 \
	-DSPEAKER_EN=1 \
	-DVO_PITCH_EN=0 \
	-DPCM_EQ_EN=0 \
	-DAUX_EN=1 \
	-DENCODER_EN=1 \
	-DDECODER_UMP3_EN=1 \
	-DDECODER_MP3_ST_EN=0 \
	-DDECODER_WAV_EN=0 \
	-DDECODER_F1A_EN=1 \
	-DDECODER_MIDI_EN=1 \
	-DDECODER_A_EN=1 \
	-DAUDIO_SPEED_EN=1 \
	-DEXT_FLASH_EN=1 \
	-DFM_EN=0 \
	-DEEPROM_EN=0 \
	-DHAS_USB_EN=1 \
	-DHAS_MIO_EN=1 \
	-DHAS_UPDATE_EN=1 \
	-DHAS_UART_UPDATE_EN=0 \
	-DECHO_EN=1 \
	-DHOWLING_EN=1 \
	-DSIMPLE_FATFS_ENABLE=1 \
	-DNOFLOAT \


# 头文件搜索路径
INCLUDES := \
	-Iapp/src/app_mg/simple \
	-Iapp/src/app_mg/common/music_api \
	-Iapp/src/app_mg/common/app_dev \
	-Iapp/src \
	-Iapp/bsp/lib \
	-Iapp/bsp/start \
	-Iapp/bsp/cpu/sh54 \
	-Iapp/bsp/cpu/sh54/spi \
	-Iapp/bsp/cpu/sh54/wdt \
	-Iapp/bsp/cpu/sh54/audio \
	-Iinclude_lib \
	-Iapp/post_build/sh54 \
	-Iinclude_lib/common \
	-Iinclude_lib/cpu/sh54 \
	-Iinclude_lib/cpu \
	-Iinclude_lib/fs \
	-Iinclude_lib/msg \
	-Iinclude_lib/fs/sydf \
	-Iinclude_lib/dev_mg \
	-Iinclude_lib/audio \
	-Iinclude_lib/sdmmc \
	-Iinclude_lib/update \
	-Iinclude_lib/decoder \
	-Iinclude_lib/decoder/list \
	-Iinclude_lib/encoder \
	-Iinclude_lib/encoder/list \
	-Iinclude_lib/device \
	-Iinclude_lib/ex_mcu \
	-Iapp/bsp/common \
	-Iapp/bsp/common/fs \
	-Iapp/bsp/common/iic_soft \
	-Iapp/bsp/common/eeprom \
	-Iapp/bsp/common/msg \
	-Iapp/bsp/common/file_operate \
	-Iapp/bsp/common/api_mg \
	-Iapp/bsp/common/key \
	-Iapp/bsp/common/power_manage \
	-Iapp/bsp/common/norflash \
	-Iapp/bsp/common/spi_soft \
	-Iapp/bsp/common/reserved_area \
	-Iapp/bsp/modules \
	-Iapp/bsp/modules/timer \
	-Iapp/src/app_mg \
	-Iapp/bsp/common/speaker \
	-Iinclude_lib/speaker \
	-Iapp/bsp/common/usb \
	-Iapp/bsp/common/usb/device \
	-Iapp/bsp/common/usb/host \
	-I$(SYS_INC_DIR) \


# 需要编译的 .c 文件
c_SRC_FILES := \
	app/bsp/common/decoder/decoder_api.c \
	app/bsp/common/decoder/decoder_msg_tab.c \
	app/bsp/common/decoder/decoder_point.c \
	app/bsp/common/decoder/eq.c \
	app/bsp/common/decoder/list/a_api.c \
	app/bsp/common/decoder/list/f1a_api.c \
	app/bsp/common/decoder/list/f1x_parsing.c \
	app/bsp/common/decoder/list/midi_api.c \
	app/bsp/common/decoder/list/midi_ctrl_api.c \
	app/bsp/common/decoder/list/mio_phy.c \
	app/bsp/common/decoder/list/ump3_api.c \
	app/bsp/common/decoder/mio_api.c \
	app/bsp/common/decoder/sine_play.c \
	app/bsp/common/encoder/encoder_api.c \
	app/bsp/common/encoder/list/a_encoder.c \
	app/bsp/common/encoder/list/ump3_encoder.c \
	app/bsp/common/fs/nor_fs/nor_fs_resource.c \
	app/bsp/common/fs/smpl_fat/smpl_fat_resource.c \
	app/bsp/common/fs/sydf/sydf_resource.c \
	app/bsp/common/fs/vfs.c \
	app/bsp/common/fs/vfs_resource.c \
	app/bsp/common/key/key.c \
	app/bsp/common/key/key_drv_ad.c \
	app/bsp/common/key/key_drv_io.c \
	app/bsp/common/key/key_ir.c \
	app/bsp/common/key/key_matrix.c \
	app/bsp/common/key/key_touch.c \
	app/bsp/common/msg/msg.c \
	app/bsp/common/norflash/norflash.c \
	app/bsp/common/power_manage/app_power_mg.c \
	app/bsp/common/reserved_area/reserved_area.c \
	app/bsp/common/sound_effect_list/echo_api.c \
	app/bsp/common/sound_effect_list/notch_howling_api.c \
	app/bsp/common/sound_effect_list/speed_api.c \
	app/bsp/common/speaker/speak_api.c \
	app/bsp/common/spi_soft/spi_soft.c \
	app/bsp/common/usb/device/descriptor.c \
	app/bsp/common/usb/device/hid.c \
	app/bsp/common/usb/device/msd.c \
	app/bsp/common/usb/device/msd_upgrade.c \
	app/bsp/common/usb/device/task_pc.c \
	app/bsp/common/usb/device/uac1.c \
	app/bsp/common/usb/device/uac_stream.c \
	app/bsp/common/usb/device/usb_device.c \
	app/bsp/common/usb/device/user_setup.c \
	app/bsp/common/usb/host/usb_bulk_transfer.c \
	app/bsp/common/usb/host/usb_ctrl_transfer.c \
	app/bsp/common/usb/host/usb_host.c \
	app/bsp/common/usb/host/usb_storage.c \
	app/bsp/common/usb/usb_config.c \
	app/bsp/common/usb/usb_host_config.c \
	app/bsp/common/usb/usb_test.c \
	app/bsp/common/usb/usr/usb_audio_interface.c \
	app/bsp/common/vm/vm_api.c \
	app/bsp/cpu/sh54/adc_drv.c \
	app/bsp/cpu/sh54/clock.c \
	app/bsp/cpu/sh54/cpu.c \
	app/bsp/cpu/sh54/dac_cpu.c \
	app/bsp/cpu/sh54/irflt.c \
	app/bsp/cpu/sh54/pl_cnt.c \
	app/bsp/cpu/sh54/port_init.c \
	app/bsp/cpu/sh54/port_wkup.c \
	app/bsp/cpu/sh54/power_api.c \
	app/bsp/cpu/sh54/spi1.c \
	app/bsp/cpu/sh54/uart.c \
	app/bsp/lib/adc_api.c \
	app/bsp/lib/audio.c \
	app/bsp/lib/audio_mic_capless.c \
	app/bsp/lib/common.c \
	app/bsp/lib/dac_api.c \
	app/bsp/lib/my_malloc.c \
	app/bsp/lib/tab_read.c \
	app/bsp/modules/soft_isr/soft_isr.c \
	app/bsp/modules/timer/tick_timer_driver.c \
	app/bsp/start/bsp_loop.c \
	app/bsp/start/device_list.c \
	app/bsp/start/init.c \
	app/bsp/start/main.c \
	app/src/app_mg/app_config.c \
	app/src/app_mg/app_mg.c \
	app/src/app_mg/common/app_dev/app_dev_mg.c \
	app/src/app_mg/common/common_msg.c \
	app/src/app_mg/common/idle_check.c \
	app/src/app_mg/common/music_api/music_api.c \
	app/src/app_mg/common/music_api/music_file_op/music_file_op.c \
	app/src/app_mg/common/music_api/music_midi_api.c \
	app/src/app_mg/common/music_api/music_midi_ctrl_api.c \
	app/src/app_mg/linein/app_linein.c \
	app/src/app_mg/linein/app_linein_key.c \
	app/src/app_mg/midi/app_midi.c \
	app/src/app_mg/midi/app_midi_key.c \
	app/src/app_mg/music/app_music.c \
	app/src/app_mg/music/app_music_key.c \
	app/src/app_mg/poweroff/app_poweroff.c \
	app/src/app_mg/poweroff/app_poweroff_key.c \
	app/src/app_mg/record/app_record.c \
	app/src/app_mg/record/app_record_key.c \


# 需要编译的 .S 文件
S_SRC_FILES :=


# 需要编译的 .s 文件
s_SRC_FILES :=


# 需要编译的 .cpp 文件
cpp_SRC_FILES :=


# 链接参数
LFLAGS := \
	--plugin-opt=save-temps \
	--gc-sections \
	--start-group \
	include_lib/liba/sh54/cpu_lib.a \
	include_lib/liba/sh54/efuse_trim_value_lib.a \
	include_lib/liba/sh54/fs_lib.a \
	include_lib/liba/sh54/audio_lib.a \
	include_lib/liba/sh54/decoder_mge_lib.a \
	include_lib/liba/sh54/ae_resample_lib.a \
	include_lib/liba/sh54/dev_mg_lib.a \
	include_lib/liba/sh54/malloc_lib.a \
	include_lib/liba/lib_echo_cal.a \
	include_lib/liba/lib_howling_fs.a \
	include_lib/liba/notchHowling.a \
	include_lib/liba/sh54/ae_howling_lib.a \
	include_lib/liba/lib_speed_pitch.a \
	include_lib/liba/sh54/update_lib.a \
	include_lib/liba/sh54/encoder_mge_lib.a \
	include_lib/liba/lib_a_code.a \
	include_lib/liba/lib_mp3_decode.a \
	include_lib/liba/lib_mp2_encode.a \
	include_lib/liba/lib_f1a_decode.a \
	include_lib/liba/lib_midi_decode.a \
	include_lib/liba/lib_a_decode.a \
	include_lib/liba/sh54/periphy_lib.a \
	include_lib/liba/sh54/file_manage_lib.a \
	include_lib/liba/sh54/sdmmc_lib.a \
	include_lib/liba/sh54/ex_mcu_lib.a \
	--end-group \
	-Tapp/post_build/sh54/app.ld \
	-M=app/post_build/sh54/app.map \
	--plugin-opt=-pi32-memreg-opt \
	--plugin-opt=-pi32-mem-offset-adj-opt \
	--plugin-opt=-pi32-const-spill \
	--plugin-opt=-pi32-enable-jz \
	--plugin-opt=-pi32-tailcall-opt \
	--plugin-opt=-inline-threshold=5 \
	--plugin-opt=-pi32-enable-itblock=1 \


LIBPATHS := \
	-L$(SYS_LIB_DIR) \


LIBS := \
	C:/JL/pi32/lib/libm.a \
	C:/JL/pi32/lib/libc.a \
	C:/JL/pi32/lib/libm.a \
	C:/JL/pi32/lib/libcompiler-rt.a \



c_OBJS    := $(c_SRC_FILES:%.c=%.c.o)
S_OBJS    := $(S_SRC_FILES:%.S=%.S.o)
s_OBJS    := $(s_SRC_FILES:%.s=%.s.o)
cpp_OBJS  := $(cpp_SRC_FILES:%.cpp=%.cpp.o)

OBJS      := $(c_OBJS) $(S_OBJS) $(s_OBJS) $(cpp_OBJS)
DEP_FILES := $(OBJS:%.o=%.d)


OBJS      := $(addprefix $(BUILD_DIR)/, $(OBJS))
DEP_FILES := $(addprefix $(BUILD_DIR)/, $(DEP_FILES))


VERBOSE ?= 0
ifeq ($(VERBOSE), 1)
QUITE :=
else
QUITE := @
endif

LINK_AT ?= 1 # 一些旧的 make 不支持 file 函数，需要 make 的时候指定 LINK_AT=0 make

.PHONY: all clean pre_build

all: pre_build $(OUT_ELF)
	@echo +POST-BUILD
	$(QUITE) $(RUN_POST_SCRIPT) sdk

pre_build:
	@echo +PRE-BUILD
	$(QUITE) $(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -D__LD__ -E -P app/post_build/sh54/toy/app_ld.c -o app/post_build/sh54/app.ld
	$(QUITE) $(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -D__LD__ -E -P app/post_build/sh54/toy/download_bat.c -o $(POST_SCRIPT)
	$(QUITE) $(FIXBAT) $(POST_SCRIPT)

clean:
	$(QUITE) $(RM) $(OUT_ELF)
	$(QUITE) $(RM) $(OBJS)
	$(QUITE) $(RM) $(DEP_FILES)

$(OUT_ELF): $(OBJS)
	@echo +LINK $@
ifeq ($(LINK_AT), 1)
	$(file >$(OBJ_FILE), $(OBJS))
	$(QUITE) $(LD) -o $(OUT_ELF) @$(OBJ_FILE) $(LFLAGS) $(LIBPATHS) $(LIBS)
else
	$(QUITE) $(LD) -o $(OUT_ELF) $(OBJS) $(LFLAGS) $(LIBPATHS) $(LIBS)
endif

$(BUILD_DIR)/%.c.o : %.c
	@echo +CC $<
	@$(MKDIR) $(@D)
	@$(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -MM -MT "$@" $< -o $(@:.o=.d)
	$(QUITE) $(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -c $< -o $@

$(BUILD_DIR)/%.S.o : %.S
	@echo +AS $<
	@$(MKDIR) $(@D)
	@$(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -MM -MT "$@" $< -o $(@:.o=.d)
	$(QUITE) $(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -c $< -o $@

$(BUILD_DIR)/%.s.o : %.s
	@echo +AS $<
	@$(MKDIR) $(@D)
	@$(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -MM -MT "$@" $< -o $(@:.o=.d)
	$(QUITE) $(CC) $(CFLAGS) $(DEFINES) $(INCLUDES) -c $< -o $@

$(BUILD_DIR)/%.cpp.o : %.cpp
	@echo +CXX $<
	@$(MKDIR) $(@D)
	@$(CXX) $(CFLAGS) $(DEFINES) $(INCLUDES) -MM -MT "$@" $< -o $(@:.o=.d)
	$(QUITE) $(CXX) $(CFLAGS) $(DEFINES) $(INCLUDES) -c $< -o $@

-include $(DEP_FILES)
